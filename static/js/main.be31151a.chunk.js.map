{"version":3,"sources":["store/selectors/index.js","store/flags.js","store/actions-creators/index.js","App.jsx","store/reducers/index.js","store/index.js","index.js"],"names":["getAllTodos","state","todos","getCompletedTodos","createSelector","filter","todo","isPending","getInCompleteTodos","ADD_NEW_TODO","REMOVE_A_TODO","EDIT_A_TODO","CLEAR_TODO_LIST","TOGGLE_TODO_STATE","removeATodo","allTodos","todoToBeRemoved","dispatch","todosAfterRemoving","slice","todoItem","createdAt","type","ACTION_TYPE","payload","editATodo","todoToBeEdited","ListAllTodos","props","toggle","edit","remove","map","i","key","onClick","e","className","value","Date","toString","split","modifiedAt","getRandomColor","color","Math","floor","random","connect","completedTodos","inCompleteTodos","useState","showingTodos","isEditing","setState","setShowTodos","useEffect","previousState","window","addEventListener","editTodo","a","handleFilter","target","name","prevState","onChange","_e","document","documentElement","style","setProperty","onSubmit","preventDefault","todoValue","Object","assign","todoData","now","required","placeholder","todoToBeToggled","toggleTodoState","length","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.be31151a.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\r\n\r\nexport const getAllTodos = state => state.todos\r\n\r\nexport const getCompletedTodos = createSelector([getAllTodos], todos => todos\r\n        .filter(todo=>!todo.isPending))\r\n\r\nexport const getInCompleteTodos = createSelector([getAllTodos], todos => todos\r\n        .filter(todo=>todo.isPending))","export const ADD_NEW_TODO = \"ADD_NEW_TODO\"\r\nexport const REMOVE_A_TODO = \"REMOVE_A_TODO\"\r\nexport const EDIT_A_TODO = \"EDIT_A_TODO\"\r\nexport const CLEAR_TODO_LIST = \"CLEAR_TODO_LIST\"\r\nexport const TOGGLE_TODO_STATE = \"TOGGLE_TODO_STATE\"","import * as ACTION_TYPE from '../flags'\r\n\r\nexport function addTodo(todoValue) {\r\n    return dispatch => {\r\n        let todoData\r\n        if (typeof todoValue === \"object\") {\r\n            todoData = [Object.assign({}, todoValue, { modifiedAt: Date.now() })]\r\n        } else {\r\n            todoData = [{\r\n                value: todoValue,\r\n                createdAt: Date.now(),\r\n                modifiedAt: \"\",\r\n                isPending:true\r\n            }]\r\n        }\r\n        dispatch({\r\n            type: ACTION_TYPE.ADD_NEW_TODO,\r\n            payload: todoData\r\n        })\r\n    }\r\n}\r\n\r\nexport function removeATodo(allTodos, todoToBeRemoved) {\r\n    return dispatch => {\r\n        const _allTodos = allTodos.slice()\r\n        const todosAfterRemoving = _allTodos.filter(todoItem => todoItem.createdAt !== todoToBeRemoved.createdAt)\r\n        dispatch({\r\n            type: ACTION_TYPE.REMOVE_A_TODO,\r\n            payload: todosAfterRemoving\r\n        })\r\n    }\r\n}\r\n\r\nexport function editATodo(todoToBeEdited) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: ACTION_TYPE.EDIT_A_TODO,\r\n            payload: todoToBeEdited\r\n        })\r\n    }\r\n}\r\n\r\nexport function clearAllTodos() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: ACTION_TYPE.CLEAR_TODO_LIST\r\n        })\r\n    }\r\n}\r\n\r\nexport function toggleTodoState(todoToBeToggled){\r\n    return dispatch => {\r\n        dispatch({\r\n            type:ACTION_TYPE.TOGGLE_TODO_STATE,\r\n            payload: todoToBeToggled\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { connect } from 'react-redux'\r\nimport { getAllTodos, getInCompleteTodos, getCompletedTodos } from './store/selectors'\r\nimport { toggleTodoState, addTodo, editATodo, removeATodo } from './store/actions-creators';\r\n\r\n\r\n\r\nfunction ListAllTodos(props){\r\n  const {todos,toggle,edit,remove} = props\r\n  return (\r\n    <ol>\r\n      {\r\n        todos.map((todo,i)=>(\r\n          <li key={i}>\r\n            <span onClick={e=>toggle(todo)} className={todo.isPending ? `pending` : `completed` }>{todo.value}<br />\r\n              <small>{new Date(todo.createdAt).toString().split(\"GMT\")[0]}</small>\r\n              {todo.modifiedAt ? <small> > {new Date(todo.modifiedAt).toString().split(\"GMT\")[0]}</small> : \"\"}\r\n            </span>\r\n            <button onClick={e=>edit(todos,todo)}>Edit</button>\r\n            <button onClick={e=>remove(todos,todo)}>Remove</button>\r\n          </li>\r\n        ))\r\n      }\r\n    </ol>\r\n  )\r\n}\r\n\r\n\r\nfunction App(props) {\r\n  const [state,setState] = useState({\r\n    todoToBeEdited:{},\r\n    showingTodos:'all',\r\n    isEditing:false,\r\n    value:\"\"\r\n  })\r\n  const [showingTodos,setShowTodos] = useState(null)\r\n\r\n  const { dispatch, todoToBeEdited } = props\r\n  useEffect(()=>{\r\n    const value = props.todoToBeEdited.value ? props.todoToBeEdited.value : \"\" \r\n    setState(previousState=>({\r\n      ...previousState,\r\n      todoToBeEdited,\r\n      value\r\n    }))\r\n    if(state.showingTodos === \"completed\"){\r\n      setShowTodos([...props.completedTodos])\r\n    }\r\n    else if(state.showingTodos === \"pending\"){\r\n      setShowTodos([...props.inCompleteTodos])\r\n    } else {\r\n      setShowTodos([...props.allTodos])\r\n    }\r\n    window.addEventListener('scroll',e=>{\r\n      // if(document.documentElement.scrollTop > 50 && )\r\n    })\r\n  },[props,state.showingTodos,todoToBeEdited])\r\n\r\n  const removeTodo = (allTodos,todoToBeRemoved) => {\r\n    dispatch(removeATodo(allTodos,todoToBeRemoved))\r\n  }\r\n\r\n  const editTodo = async (allTodos,todoToBeEdited) => {\r\n    await dispatch(removeATodo(allTodos, todoToBeEdited))\r\n    dispatch(editATodo(todoToBeEdited))\r\n    setState(previousState=>({\r\n      ...previousState,\r\n      isEditing:true,\r\n      value:todoToBeEdited.value\r\n    }))\r\n  }\r\n\r\n  const toggleTodo = (todoToBeToggled) => {\r\n    dispatch(toggleTodoState(todoToBeToggled))\r\n  }\r\n\r\n  const addNewTodo = (e) => {\r\n    e.preventDefault()\r\n    if(e.target.value === \"\"){\r\n      e.target.required = true\r\n      return\r\n    }\r\n    const value = state.isEditing ? Object.assign({},state.todoToBeEdited,{value:state.value}) : state.value\r\n    dispatch(addTodo(value))\r\n    setState(previousState=>({\r\n      ...previousState,\r\n      isEditing:false,\r\n      value:\"\"\r\n    }))  \r\n  }\r\n\r\n  const handleChange = e => {\r\n    const value = e.target.value\r\n    setState(prevState=>({\r\n      ...prevState,\r\n      value\r\n    }))\r\n  }\r\n\r\n  const handleFilter = e => {\r\n    const value = e.target.name\r\n    setState(prevState=>({\r\n      ...prevState,\r\n      showingTodos : value\r\n    }))\r\n  }\r\n\r\n  const handleBackgroundChange = (e) => {\r\n    const _e = e;\r\n    if(_e.target.value === \"#fff\"){\r\n      document.documentElement.style.setProperty(`--formbg`,getRandomColor())\r\n      document.documentElement.style.setProperty(`--text`,getRandomColor())\r\n      document.documentElement.style.setProperty(`--${_e.target.name}`,`${_e.target.value}`)\r\n      \r\n    } else {\r\n      document.documentElement.style.setProperty(`--formbg`,`${getRandomColor()}66`)\r\n      document.documentElement.style.setProperty(`--text`,getRandomColor())\r\n      document.documentElement.style.setProperty(`--${_e.target.name}`,`linear-gradient(120deg,${getRandomColor()},${getRandomColor()},${getRandomColor()})`)\r\n\r\n    }\r\n  }\r\n\r\n  if(state === null || showingTodos === null){\r\n    return <>Loading...</>\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"background-toggler\">\r\n        <select name=\"background\" onChange={handleBackgroundChange}>\r\n          <option value=\"linear-gradient(120deg, #a81010,#653445,#1bffce)\">Gradient</option>\r\n          <option value=\"#fff\">White</option>\r\n        </select>\r\n      </div>\r\n      <form onSubmit={addNewTodo}>\r\n        <input type=\"text\" value={state.value} onChange={handleChange} placeholder=\"Write your todos here\" required/>\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n      <ListAllTodos todos={showingTodos} edit={editTodo} remove={removeTodo} toggle={toggleTodo}/>\r\n      {\r\n        props.allTodos.length ? <ol>\r\n          <li>\r\n            <button name=\"completed\" onClick={handleFilter} className={`list-toggler ${state.showingTodos === \"completed\" ? 'active' : ''}`}>Completed</button>\r\n            <button name=\"pending\" onClick={handleFilter} className={`list-toggler ${state.showingTodos === \"pending\" ? 'active' : ''}`}>Pending</button>\r\n            <button name=\"all\" onClick={handleFilter} className={`list-toggler ${state.showingTodos === \"all\" ? 'active' : ''}`}>All</button>\r\n          </li> \r\n        </ol>: \"\"\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getRandomColor() {\r\n  var letters = '0123456789ABCDEF';\r\n  var color = '#';\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    allTodos:getAllTodos(state),\r\n    completedTodos:getCompletedTodos(state),\r\n    inCompleteTodos:getInCompleteTodos(state),\r\n    todoToBeEdited:state.todoToBeEdited\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import * as ACTION_TYPE from '../flags'\r\n\r\nconst initialState = {\r\n    todos: [],\r\n    todoToBeEdited: {}\r\n}\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.ADD_NEW_TODO:\r\n            return {\r\n                ...state,\r\n                todos: [...action.payload,...state.todos],\r\n                todoToBeEdited: {}\r\n            }\r\n        case ACTION_TYPE.REMOVE_A_TODO:\r\n            return {\r\n                ...state,\r\n                todos: [...action.payload]\r\n            }\r\n        case ACTION_TYPE.EDIT_A_TODO:\r\n            return {\r\n                ...state,\r\n                todoToBeEdited: action.payload\r\n            }\r\n        case ACTION_TYPE.CLEAR_TODO_LIST:\r\n            return {\r\n                ...state,\r\n                todos: [],\r\n                todoToBeEdited: {}\r\n            }\r\n        case ACTION_TYPE.TOGGLE_TODO_STATE:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(todo=>todo.createdAt === action.payload.createdAt ? Object.assign({},todo,{isPending:!action.payload.isPending}) : todo)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootState from './reducers/index'\r\n\r\nconst store = createStore(rootState, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\n// import * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/index'\r\n\r\nReactDOM.render(<Provider store={ store }>\r\n                    < App />\r\n                </Provider>, document.getElementById('root'));\r\n\r\n        // If you want your app to work offline and load faster, you can change\r\n        // unregister() to register() below. Note this comes with some pitfalls.\r\n        // Learn more about service workers: https://bit.ly/CRA-PWA\r\n        // serviceWorker.unregister();"],"sourceRoot":""}